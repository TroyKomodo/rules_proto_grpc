{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "extends": [
    "config:best-practices",
    ":automergeDisabled",
    ":disableDependencyDashboard",
    ":semanticCommitsDisabled"
  ],

  "prConcurrentLimit": 30, // Increase number of allowed open PRs from 10
  "prHourlyLimit": 6, // Allow more than default of 2 new PRs per hour
  "postUpdateOptions": [
    "gomodTidy"
  ],
  "prBodyTemplate": "{{{header}}}{{{table}}}{{{warnings}}}{{{notes}}}{{{changelogs}}}{{{controls}}}{{{footer}}}",
  "prFooter": "View the [repository job log](https://developer.mend.io/{{platform}}/{{repository}})",
  "prHeader": "",
  "rebaseWhen": "conflicted",

  "ignorePaths": [
    "**/node_modules/**",
    "**/bower_components/**",
    "**/vendor/**",
    "**/__fixtures__/**"
  ],
  "bazel-module": {
    "managerFilePatterns": [
      "/(^|/)MODULE\\.bazel$/",
      "/(^|/)MODULE\\.bazel.template$/",  // Match template file in rulegen
      "tools/rulegen/*.go",  // Match template strings in rulegen
      "docs/lang/*.rst"  // Match output of template strings in docs
    ]
  },
  "pip_requirements": {
    "managerFilePatterns": [
      "/(^|/)[\\w-]*requirements([-.]\\w+)?\\.(txt|pip|in)$/"
    ]
  },
  "swift": {
    "managerFilePatterns": [
      "/(^|/)Package\\.swift/"
    ],
    "versioning": "swift",
    "pinDigests": true
  },

  "customManagers": [
    {
      "customType": "regex",
      "description": "Match Maven deps in MODULE.bazel files",
      "managerFilePatterns": [
        "/(^|/)MODULE\\.bazel$/"
      ],
      "matchStringsStrategy": "recursive",
      "matchStrings": [
        // Find artifacts section, then find each artifact within using the
        // recursive strategy above
        "artifacts\\s*=\\s*\\[[^\\]]*?\\]",
        "\"(?<depName>[^\"]+):(?<currentValue>[^\"]+)\""
      ],
      "datasourceTemplate": "maven",
      "versioningTemplate": "maven"
    },
    {
      "customType": "regex",
      "description": "Match plugin files in module_extensions.bzl files",
      "managerFilePatterns": [
        "/(^|/)module_extensions\\.bzl$/"
      ],
      "matchStringsStrategy": "recursive",
      "matchStrings": [
        // Find assets hash block by looking for # renovate-gh-plugin: org/repo
        // then find each plugin within using recursive strategy
        "\\[\\s*?# ?renovate-gh-plugin:\\s*(?<depName>\\S+)[^\\]]+?\\]",
        "\\(\\s*\"(?<currentValue>[^\"]+?)\"\\s*,\\s*\"[^\"]+?\"\\s*,\\s*\"(?<currentDigest>[^\"]+?)\"\\s*\\)"
      ],
      "datasourceTemplate": "github-release-attachments"
    },
    {
      "customType": "regex",
      "description": "Match Go deps in MODULE.bazel files",
      "managerFilePatterns": [
        "/(^|/)MODULE\\.bazel$/"
      ],
      "matchStrings": [
        // Don't use digest here, as it is the commit hash of the version
        // rather than the h1 sum we need
        "go_deps.module\\([^)]+?path\\s*=\\s*\"(?<depName>[^\"]+)\"[^)]+?version\\s*=\\s*\"(?<currentValue>[^\"]+)\""
      ],
      "datasourceTemplate": "go",
      "versioningTemplate": "go-mod-directive"
    }
  ],

  "packageRules": [
    {
      "description": "Do not update modules published in this repo",
      "matchCurrentValue": "0.0.0.rpg.version.placeholder",
      "matchDatasources": [
        "bazel"
      ],
      "enabled": false
    },
    {
      "description": "Group all grpc updates into one update and ensure manual updates made",
      "matchPackageNames": [
        "grpc",
        "grpcio",
        "io.grpc:*"
      ],
      "groupName": "grpc",
      "draftPR": true,
      "prBodyNotes": "> [!CAUTION]\n> This PR is marked as draft, as some updates cannot be made automatically (e.g. Go deps)"
    },
    {
      "description": "Ensure gRPC Gateway protoc plugins are updated in sync with Go deps",
      "matchPackageNames": [
        "github.com/grpc-ecosystem/grpc-gateway/v2"
      ],
      "matchDatasources": [
        "go"
      ],
      "draftPR": true,
      "prBodyNotes": "> [!CAUTION]\n> This PR is marked as draft, as the protoc plugins in modules/grpc-gateway/module_extensions.bzl need manual updating"
    },
    {
      "description": "Group all protobuf updates into one update and ensure manual updates made",
      "matchPackageNames": [
        "protobuf",
        "com.google.protobuf:*",
        "toolchains_protoc"
      ],
      "groupName": "protobuf",
      "draftPR": true,
      "prBodyNotes": "> [!CAUTION]\n> This PR is marked as draft, as some updates cannot be made automatically (e.g. Go deps)"
    },
    {
      "description": "Group all grpc-gateway updates into one update",
      "matchPackageNames": [
        "grpc_ecosystem_grpc_gateway",
        "grpc-ecosystem/grpc-gateway"
      ],
      "groupName": "grpc-gateway"
    },
    {
      "description": "Group all grpc-web updates into one update",
      "matchPackageNames": [
        "grpc-web",
        "grpc/grpc-web"
      ],
      "groupName": "grpc-web"
    },
    {
      "description": "Ensure Swift Package.resolved is updated",
      "matchManagers": [
        "swift"
      ],
      "draftPR": true,
      "prBodyNotes": "> [!CAUTION]\n> This PR is marked as draft, as Renovate will not update Package.resolved. See renovatebot/renovate#6924"
    },
    {
      "description": "Ensure JS plugins are updated",
      "matchManagers": [
        "npm"
      ],
      "matchPackageNames": [
        "@grpc/grpc-js",
        "google-protobuf",
        "grpc-web"
      ],
      "draftPR": true,
      "prBodyNotes": "> [!CAUTION]\n> This PR is marked as draft, as the JS plugins need to be updated in sync in modules/js/module_extensions.bzl"
    }
  ]
}
